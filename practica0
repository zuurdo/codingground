Program practica0;
CONST
    MIN=1;
    MAX=3;
TYPE
    TIndice=MIN..MAX;
    TEmpleados= RECORD
        sueldo:real;
        nombre:string;
        edad:integer;
    END;
    
    TArrayPointer= ARRAY [TIndice] OF ^TEmpleados;
    
VAR
    almacen:TArrayPointer;
    limite:real;
    
PROCEDURE inic (VAR empleado:TEmpleados );
VAR
    edad:integer;
    nombre:string;
    sueldo:real;
BEGIN{inic}
    writeln('Introduzca el nombre del empleado');
    readln(empleado.nombre);
    writeln('Introduzca la edad del empleado');
    readln(empleado.edad);
    writeln('Introduzca el sueldo del empleado');
    readln(empleado.sueldo);
    writeln('------------------------------')
END;{inic}
    
PROCEDURE reservaEspacio (VAR alma:TArrayPointer);
VAR
  i:integer;
BEGIN{reservaEspacio}
    FOR i:=MIN TO MAX DO BEGIN
        new(alma[i]);
        inic(alma[i]^);
    END;
END;{reservaEspacio}

PROCEDURE ordenar(VAR alma:TArrayPointer);
VAR
    i,j:integer;
    aux:^TEmpleados;
BEGIN
    FOR i:=MIN TO pred(MAX)DO BEGIN
     FOR j:=MIN TO pred(MAX)DO
            IF (alma[j]^.sueldo > alma[j+1]^.sueldo) THEN BEGIN
                aux:=almacen[j];
                alma[j]:=almacen[j+1];
                alma[j+1]:=aux;
            END;
        END;
END;
    
PROCEDURE mostrar (VAR alma:TArrayPointer);
VAR
    i:integer;
BEGIN{mostrar}
    FOR i:=MIN TO MAX DO BEGIN
    IF (alma[i]<>NIL)THEN
        writeln('Empleado: ',alma[i]^.nombre, ' de ',alma[i]^.edad,' de edad y cobra: ',alma[i]^.sueldo:0:0,' euros al mes');
    END;
END;{mostrar}

PROCEDURE eliminar (VAR alma:TArrayPointer; limit:real);
VAR
    i:integer;
BEGIN{ELIMINAR}
    FOR i:=MIN TO MAX DO BEGIN
        IF (alma[i]^.sueldo>limite) THEN BEGIN
            dispose(alma[i]);
            alma[i]:=NIL;
        END;
    END;
END;{ELIMINAR}

BEGIN
    writeln('Introducir los datos de los empleados por teclado');
    reservaEspacio(almacen);
    mostrar(almacen);
    readln;
    ordenar(almacen);
    mostrar(almacen);
    readln;
    writeln('Introducir el limite de sueldo maximo');
    readln(limite);
    readln;
    eliminar(almacen,limite);
    readln;
    mostrar(almacen);
  
END.

